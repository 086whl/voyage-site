<?xml version="1.0" encoding="utf-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="cn.edu.nuist.voyagesite.mapper.UserMapper">
    <!--查询用户是否存在-->
    <select id="findUsername" resultType="String">
        select username
        from tab_user
        where username = #{username};
    </select>
    <!--    通过用户名和密码查询用户-->
    <select id="findByUsernameAndPassword" resultType="cn.edu.nuist.voyagesite.domain.User">
        select *
        from tab_user
        where username = #{username}
          and password = #{pwMd5};
    </select>
    <!--    插入新用户-->
    <insert id="save" parameterType="cn.edu.nuist.voyagesite.domain.User">
        insert into tab_user(username, password, name, birthday, sex, telephone, email)
        values (#{username}, #{password}, #{name}, #{birthday}, #{sex}, #{telephone}, #{email})
    </insert>
    <!--    通过模糊查询用户名查询用户信息-->
    <select id="findUserByUsername" resultMap="users">
        select *
        from tab_user
        where username like CONCAT('%', #{username}, '%')
          and status = 1
            limit #{page}
            , #{limit}
    </select>
    <resultMap id="users" type="cn.edu.nuist.voyagesite.domain.User">
        <result property="uid" column="uid"/>
        <result property="username" column="username"/>
        <result property="password" column="password"/>
        <result property="name" column="name"/>
        <result property="birthday" column="birthday"/>
        <result property="sex" column="sex"/>
        <result property="telephone" column="telephone"/>
        <result property="email" column="email"/>
        <result property="status" column="status"/>
        <result property="code" column="code"/>
    </resultMap>

    <!--    更新用户信息-->
    <update id="updateUserInfo" parameterType="user">
        update tab_user
        set username=#{username},
            name=#{name},
            birthday=#{birthday},
            sex=#{sex},
            telephone=#{telephone},
            email=#{email}
        where uid = #{uid}
    </update>

    <select id="findAllUser" resultMap="users">
        select *
        from tab_user
        where  status=1 LIMIT #{page},#{limit}
    </select>

    <!--    删除用户,设置状态为0-->
    <delete id="deleteUser" parameterType="int">
        update tab_user
        set status=0
        where uid = #{uid}

    </delete>

</mapper>